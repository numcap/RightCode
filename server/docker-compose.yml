services:
  ocr-service:
    container_name: ocr-service
    build:
      context: .
      dockerfile: ./Dockerfile
      platforms:
        - linux/amd64
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - REDIS_URL_OCR
      - REDIS_URL_CELERY
      - AWS_REGION
      - EXECUTION_QUEUE_PYTHON_URL
      - EXECUTION_QUEUE_JAVASCRIPT_URL
      - EXECUTION_QUEUE_JAVA_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - redis
    volumes:
      - ./:/app
      # - ~/.cache/huggingface:/root/.cache/huggingface
    command: uvicorn main:app --host 0.0.0.0 --port 8000 # --reload

  celery-worker:
    container_name: celery-worker
    build: 
      context: .
      dockerfile: ./Dockerfile.celery
      platforms:
        - linux/amd64
    env_file: .env
    volumes:
      - ./:/app
    # depends_on:
    #   - ocr-service
    #   - redis
    # volumes:
    #   - ~/home/jonathan/huggingface:/home/appuser/.cache/huggingface
    # deploy:
    #   replicas: 2
    environment:
      - REDIS_URL_OCR
      - REDIS_URL_CELERY
      - AWS_REGION
      - EXECUTION_QUEUE_PYTHON_URL
      - EXECUTION_QUEUE_JAVASCRIPT_URL
      - EXECUTION_QUEUE_JAVA_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

  # celery-flower:
  #   build: 
  #     context: .
  #     platforms: 
  #       - linux/amd64
  #   command: celery -A celery_worker.celeryApp flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - celery-worker
  #   env_file: .env

  # Code execution workers for different languages
  java-executor:
    container_name: java-executor
    build: 
      context: ./executors/java
      platforms:
        - linux/amd64
    env_file: .env
    environment:
      - REDIS_URL_OCR
      - REDIS_URL_CELERY
      - AWS_REGION
      - EXECUTION_QUEUE_JAVA_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - redis
    # deploy:
    #   replicas: 2

  python-executor:
    container_name: python-executor
    build: 
      context: ./executors/python
      platforms:
        - linux/amd64
    env_file: .env
    environment:
      - REDIS_URL_OCR
      - REDIS_URL_CELERY
      - AWS_REGION
      - EXECUTION_QUEUE_PYTHON_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - redis
    # deploy:
    #   replicas: 2

  javascript-executor:
    container_name: javascript-executor
    build: 
      context: ./executors/javascript
      platforms:
        - linux/amd64
    env_file: .env
    environment:
      - REDIS_URL_OCR
      - REDIS_URL_CELERY
      - AWS_REGION
      - EXECUTION_QUEUE_JAVASCRIPT_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    depends_on:
      - redis
    # deploy:
    #   replicas: 2

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - ocr-service

  redis:
    image: redis:7-alpine
    container_name: redis
    expose:
      - 6379
    # ports:
    #   - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
#   huggingface_cache:
#     driver: local
  redis_data: